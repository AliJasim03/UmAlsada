/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import FileManager.FileManager;
import CustomGUI.Message;
import GlassPanePopup.GlassPanePopup;
import Logic.GymSystem;
import Logic.Member;
import Logic.PolytechnicStudent;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.IOException;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alija
 */
public class ManageMembersPnl extends javax.swing.JPanel {

    /**
     * Creates new form ManageEmployeePnl
     */
    Message obj = new Message();
    EditMemberPnl editMemberPnl;

    public ManageMembersPnl() {
        initComponents();
        membersTable.fixTable(jScrollPane);
        obj.eventOK(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                GlassPanePopup.closePopupLast();
            }
        });
        this.editMemberPnl = new EditMemberPnl(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textField1 = new CustomGUI.TextField();
        jScrollPane = new javax.swing.JScrollPane();
        membersTable = new Table.Table();
        editBtn = new CustomGUI.Button();
        delBtn = new CustomGUI.Button();

        setBackground(new java.awt.Color(42, 107, 120));

        textField1.setEditable(false);
        textField1.setBackground(new java.awt.Color(233, 189, 78));
        textField1.setForeground(new java.awt.Color(0, 0, 0));
        textField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        textField1.setText("Manage Members");
        textField1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        textField1.setRound(50);
        textField1.setShadowColor(new java.awt.Color(0, 0, 0));

        membersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phone", "Date of Birth", "Type"
            }
        ));
        membersTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        membersTable.setShowGrid(true);
        jScrollPane.setViewportView(membersTable);

        editBtn.setBackground(new java.awt.Color(68, 176, 191));
        editBtn.setForeground(new java.awt.Color(233, 189, 78));
        editBtn.setText("Edit");
        editBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        delBtn.setBackground(new java.awt.Color(68, 176, 191));
        delBtn.setForeground(new java.awt.Color(233, 189, 78));
        delBtn.setText("Delete");
        delBtn.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        delBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(delBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        if (membersTable.getSelectedRow() != -1) {
            MainFrame.body.removeAll();
            MainFrame.body.add(editMemberPnl);
            editMemberPnl.mem = GymSystem.members.get(membersTable.getSelectedRow());
            editMemberPnl.showData();
            MainFrame.body.repaint();
            MainFrame.body.revalidate();
        } else {
            obj.jLabel1.setText("Please Select a member to edit");
            GlassPanePopup.showPopup(obj);
        }
    }//GEN-LAST:event_editBtnActionPerformed

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delBtnActionPerformed
        if (membersTable.getSelectedRow() != -1) {
            GymSystem.members.remove(membersTable.getSelectedRow());

            try {
                FileManager.getInstance().writeMember();
            } catch (IOException ex) {
                java.util.logging.Logger.getLogger(ManageMembersPnl.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }

            showData();
            obj.jLabel1.setText("Member has been deleted");
            GlassPanePopup.showPopup(obj);
        } else {

            obj.jLabel1.setText("Please Select a member to delete");
            GlassPanePopup.showPopup(obj);
        }
    }//GEN-LAST:event_delBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private CustomGUI.Button delBtn;
    private CustomGUI.Button editBtn;
    private javax.swing.JScrollPane jScrollPane;
    private Table.Table membersTable;
    private CustomGUI.TextField textField1;
    // End of variables declaration//GEN-END:variables
public void showData() {
        DefaultTableModel model = (DefaultTableModel) membersTable.getModel();
        model.setRowCount(0);
        for (Member mem : GymSystem.members) {
            if (mem instanceof PolytechnicStudent) {
                membersTable.addRow(new Object[]{mem.getId(), mem.getFullName(), mem.getPhone(), mem.getBirthDate(), "Student"});
            } else {
                membersTable.addRow(new Object[]{mem.getId(), mem.getFullName(), mem.getPhone(), mem.getBirthDate(), "Staff"});
            }
        }
    }
}
